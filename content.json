{"pages":[],"posts":[{"title":"Typora","text":"title：typora语法教程Typora教程！！！ 一、分级标题1#+空格+标题内容 快捷键：ctrl++ || ctrl– 二、字体样式 斜体 1*内容* 快捷键：ctrl+i 加粗 1**内容** 快捷键：ctrl+b 下划线 1&lt;u&gt;内容&lt;/u&gt; 快捷键：ctrl+u 删除线 1~~内容~~ 快捷键：shift+alt+5 居中 1&lt;center&gt;内容&lt;/center&gt; 脚注 1内容[^+空格+脚注名] 高亮文字 1==内容== 上下标 12&lt;sup&gt;上标内容&lt;/sup&gt;&lt;sub&gt;下标内容&lt;/sub&gt; 文字颜色 1$\\color{颜色代码}{文字内容}$ 文字底色 1&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=颜色代码&gt;内容&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; 三、列表 有序列表 1数字+英文句号 快捷键：ctrl+shift+[ 无序列表 1中划线+空格 快捷键：ctrl+shift+] 四、代码 行内代码 1`代码块` 快捷键：ctrl+shift+` 代码块 1​```代码块``` 快捷键：ctrl+shift+k 五、分割线12***--- 六、引用 一级引用 1大于号+空格+内容 快捷键：ctrl+shift+q 嵌套引用 1大于号+空格+大于号+空格+内容 七、表格123|表头1|表头2|表头3||-----|-----|-----||内容 |内容 |内容 | 八、生成目录1[toc] 九、插入链接12&lt;链接地址&gt;[链接内容](链接地址) 十、数字&amp;符号1$+\\+数字符号代码+$ 十一、表情&amp;符号1:+符号代码+:","link":"/Typora/"},{"title":"Http协议","text":"HTTP 概念： Hyper Text Transfer Protocol 超文本传输协议 1 .请求报文：客户端发送给服务器的数据 2 .响应报文：服务器发送给客户端的数据 历史版本： 1.0 ： 每次请求和响应都会建立新的连接 1.1 ： 复用连接 请求报文 1 .请求行：请求方法 请求的url 请求协议/版本 ​ 如：GET /login.html HTTP/1.1 2 .请求头：请求头名称：请求头值 3 .请求空行: 空行（分割请求头和请求体） 4 .请求体：GET方式下没有请求体 ​ 字符串格式： 12345678910POST /user/login.html HTTP/1.1Host: 127.0.0.1:8000User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:72.0) Gecko/20100101 Firefox/72.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateConnection: keep-aliveUpgrade-Insecure-Requests: 1uname=aaa&amp;pass=111 响应报文 1 .响应行：请求的协议 状态码 状态信息 2 .响应头：请求头名称：请求头值 3 .响应空行：空行 4 .响应体： 字符串格式： 12345678HTTP/1.1 200 OKDate: Tue, 04 Feb 2020 06:24:18 GMTServer: WSGIServer/0.2 CPython/3.8.1Content-Type: text/html; charset=utf-8X-Frame-Options: SAMEORIGINVary: CookieContent-Length: 778Set-Cookie: csrftoken=jqXiMMrMK8BRRooDlrbEADD8W3OmdCNYNzHcOh8OpOCoPeGL8pMBUqiEZSEG7VVh; expires=Tue, 02-Feb-2021 06:24:18 GMT; Max-Age=31449600; Path=/","link":"/Http%E5%8D%8F%E8%AE%AE/"},{"title":"PythonBase","text":"Python语言是由荷兰程序员Guido van Rossum，江湖人称“龟叔”,1989年圣诞为了打法圣诞的无趣，决定研发一个新的脚本解释语言。Python第一个发行版发行于1911年。 一、标识符标识符就是变量，常量，函数，类等对象的名字 ,Python严格区分大小写 第一个字符必须是字母或者下划线 其他部分由字母、数字和下划线组成 标识符对大小写敏感 变量名全小写、常量名全大写 二、Python注释","link":"/PythonBase/"},{"title":"Hello World","text":"1alter(&quot;hello world&quot;);","link":"/hello-world/"},{"title":"java-mysql","text":"java连接mysql 导入jar包 声明几个静态的常量 12345678//加载驱动字符串static final String DRIVER = \"com.mysql.jdbc.Driver\"; //URLstatic final String URL = \"jdbc:mysql://localhost:3306/DB_Name\";//用户名static final String UNAME = \"root\";//密码static final String PWD = \"pwd\"; 加载驱动,使用Class类的静态方法forName() $\\color{red}{注意:}$抛出异常 1Class.forName(DRIVER); 获取连接对象 1Connection conn = DriverManager.getConnection(URL,UNAME,PWD); 下面是完整代码 123456789101112131415161718192021222324252627282930313233343536373839404142434445package util;import java.sql.Connection;import java.sql.DriverManager;import java.sql.ResultSet;import java.sql.SQLException;import java.sql.Statement;public class DBUtil { static final String DRIVER =\"com.mysql.jdbc.Driver\"; static final String URL =\"jdbc:mysql://localhost:3306/temp\"; static final String USER =\"root\"; static final String PWD =\"root\"; //加载静态块 static { try { Class.forName(DRIVER); } catch (ClassNotFoundException e) { e.printStackTrace(); } } //返回连接对象 public static Connection getConn() throws SQLException{ return DriverManager.getConnection(URL,USER,PWD); } //关闭连接 public static void closeAll(Connection conn,Statement stmt,ResultSet rs){ try { if(rs != null){ rs.close(); } if(stmt != null){ stmt.close(); } if(conn != null){ conn.close(); } } catch (Exception e) { e.printStackTrace(); } }} 测试12345678910111213141516171819202122public class Test { //连接对象 static Connection conn =null; //预编译对象 static PreparedStatement ps = null; //结果集 static ResultSet rs = null; public static void main(String[] args) throws SQLException{ //获取连接对象 conn = DBUtil.getConn(); //要执行的sql语句 String sql = \"select * from address\"; ps = conn.prepareStatement(sql); //执行 rs = ps.executeQuery(); //循环输出值1 while (rs.next()) { System.out.println(\"编号\"+rs.getInt(\"stuID\")+\"\\t姓名\"+rs.getString(\"stuName\")); } }}","link":"/java-mysql/"}],"tags":[],"categories":[]}